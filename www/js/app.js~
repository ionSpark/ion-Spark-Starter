// just for starter app to give a list of installed modules
(function(orig) {
    angular.modules = [];
    angular.module = function() {
        if (arguments.length > 1) {
            angular.modules.push(arguments[0]);
        }
        return orig.apply(null, arguments);
    }
})(angular.module);

// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
// 'starter.services' is found in services.js
// 'starter.controllers' is found in controllers.js
angular.module('app',[
  'ionic',
  'app.controllers',
  'app.services',
  'app.factorys',
  'app.directives',
  'jdFontselect',
  'cardsHorizontal',
  'ngMessages',
  'angularMoment',
  'spark.Customizer',
  'spark.slideMenuLeft',
  'spark.homeBasic',
  'spark.animatedModal',
  'spark.components',
  'spark.walkthroughBasic',
  'spark.endlessScrollList',
  'spark.hzImageSliderWithZoom',
  'spark.hzCardSwipable',
  'spark.widgets',
  'spark.loginBasic',
  'spark.forgotUsernameBasic',
  'spark.profileRound',
  'spark.registerBasic',
  'spark.registerValidation',
  'spark.forgotPasswordBasic',
  'spark.imageGridBasic',
  'spark.imageGridAdvanced',
  'spark.flexPerfectCenter',
  'spark.loginValidation',
  'spark.tabsBasic',
  'spark.ngCordova',
  'spark.slideBoxBasic',
  'spark.settingsBasic',
  'spark.mapsBasic',
  'spark.cartBasic',
  'spark.cartAdvanced',
  'spark.todoBasic',
  'spark.chatBasic',
  'spark.emailBasic',
  'spark.headerShrinkPage',
  'spark.slideMenuSecondary',
  'spark.buttonStyles',
  'spark.stickyHeaderList',
  'spark.stickyHeaderCard',
  'spark.parallaxHero',
  'spark.directiveButtons',
  'spark.ngClickWait',
  'spark.buyThisNow'
])

.run(function($ionicPlatform) {
  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    if(window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
    }
    if(window.StatusBar) {
      // org.apache.cordova.statusbar required
      StatusBar.styleDefault();
    }
  });
})
